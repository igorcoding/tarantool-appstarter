#! /usr/bin/env tarantool

local fio = require('fio')

local function isroot(s)
    if s == nil or s == '' then
        return false
    else
        return string.sub(s, 1, 1) == '/'
    end
end

local function slashends(s)
    return string.sub(s, -1, -1) == '/'
end

local function abspath(p,b)
    if p == nil then return nil end
    if isroot(p) then
        return p
    end
    return fio.abspath(fio.pathjoin(b, p))
end

local function get_workdir(def)
    local workdir
    if #arg > 1 then
        error('Either 0 or 1 argument is expected')
    elseif #arg == 1 then
        workdir = arg[1]
    else
        workdir = def
    end

    if isroot(workdir) then
        return workdir
    end

    local cur = fio.cwd()

    if workdir == '.' then
        return cur
    end

    return fio.abspath(fio.pathjoin(cur, workdir))
end

local function qa(q, def)
    io.write(q)
    io.flush()
    local a = io.read()
    if def ~= nil and (a == nil or a == '') then
        return def
    end
    return a
end

local function main()
    local cur = debug.getinfo(2,"S").source:sub(2)
    local curdir = cur:match("(.*/)")
    local rootdir = fio.pathjoin(curdir, '..')
    print(rootdir)
    package.path = rootdir .. '/?.lua;' .. rootdir .. '/?/init.lua;' .. package.path

    local lib = require('startapp')

    local workdir = get_workdir('.')
    io.write("Tarantool app will be created in the following directory: " .. workdir .. "\n")
    local name = qa("Enter name (default is test): ", 'test')
    local version = qa("Enter version (default is 0.1): ", 0.1)
    print(require('yaml').encode({
        workdir = workdir,
        name = name,
        version = version
    }))

    lib.start_app(rootdir, {
        workdir = workdir,
        name = name,
        version = version
    })
end

main()
